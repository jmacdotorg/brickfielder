#!/usr/bin/env perl

use warnings;
use strict;
use v5.10;

my %drills = (
    aerobic => [
        "jumping jacks",
        "step ups",
        "high knees",
    ],
    lower => [
        "squats",
        "lunges",
        "wall sit",
    ],
    upper => [
        "push ups",
        "rotational push ups",
        "tricep dips",
    ],
    core => [
        "plank",
        "crunches",
        "side plank",
    ],
);

my @drills;

my $tempfile = "/tmp/7minutes.pid";
unlink $tempfile;

foreach my $rep (1..3) {
    for my $drill_type ( qw( aerobic lower upper core ) ) {
        my @possible_drills = @{ $drills{ $drill_type } };
        my $drill = splice @possible_drills, int(rand($#possible_drills + 1)), 1;
        push @drills, $drill;
        $drills{$drill_type} = \@possible_drills;
    }
}

my $LONG_BREAK = 10;
my $SHORT_BREAK = 3;
my @SPOKEN_SECONDS = (20, 10, 5, 4, 3, 2, 1);
my $SECONDS_LABEL_CUTOFF = 9;

my $LONG_DRILL = 30;
my $SHORT_DRILL = 15;

for my $drill ( @drills ) {
    speak("Prepare for $drill.");
    countdown( $LONG_BREAK );
    speak("Start now.");
    if ( $drill eq 'side plank' ) {
        countdown( $SHORT_DRILL );
        speak ("Switch sides.");
        countdown( $SHORT_BREAK );
        speak ("Resume.");
        countdown( $SHORT_DRILL );
    }
    else {
        countdown( $LONG_DRILL );
    }
    speak( "Rest.");
    sleep 1;
}
speak ( "Workout complete.");

sub speak {
    my $pid = fork;
    unless ( $pid ) {
        unless ( -e $tempfile ) {
            open my $fh, '>', $tempfile;
            print $fh $pid;
            say @_;
            system ( 'say', @_ );
            unlink $tempfile;
        }
        exit;
    }
}

sub countdown {
    my ($seconds) = @_;
    for my $current_second (reverse(0..$seconds)) {
        sleep 1;
        if ( grep {$_ == $current_second} @SPOKEN_SECONDS ) {
            if ( $current_second >= $SECONDS_LABEL_CUTOFF ) {
                speak( "$current_second seconds left.");
            }
            else {
                speak( $current_second );
            }
        }
    }
}


